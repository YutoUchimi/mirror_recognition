<launch>

  <arg name="save_dir"
       value="~/data/datasets/mirror_recognition/raw_data/20191205/before_split"/>
  <arg name="min_image_value" default="0.5"/>
  <arg name="max_image_value" default="5.0"/>

  <!-- ******************************************************************** -->
  <!-- Data collection                                                      -->
  <!-- ******************************************************************** -->

  <node name="data_collection_server"
        pkg="jsk_data" type="data_collection_server.py"
        clear_params="true" output="screen">
    <rosparam subst_value="true">
      save_dir: $(arg save_dir)
      topics:
        - name: /kinect_head/rgb/camera_info
          msg_class: sensor_msgs/CameraInfo
          fname: camera_info.yaml
          savetype: YAML
        - name: /kinect_head/rgb/image_rect_color
          msg_class: sensor_msgs/Image
          fname: image.jpg
          savetype: ColorImage
        - name: /kinect_head/depth_registered/hw_registered/image_rect
          msg_class: sensor_msgs/Image
          fname: depth.npz
          savetype: DepthImage
        - name: /tf_to_transform_map_to_camera/output
          msg_class: geometry_msgs/TransformStamped
          fname: tf_map_to_camera.yaml
          savetype: YAML
        - name: /tf_to_transform_base_to_camera/output
          msg_class: geometry_msgs/TransformStamped
          fname: tf_base_to_camera.yaml
          savetype: YAML
      message_filters: true
      approximate_sync: true
      slop: 1.0
    </rosparam>
  </node>

  <node name="tf_to_transform_map_to_camera"
        pkg="jsk_topic_tools" type="tf_to_transform.py"
        output="screen"
        respawn="true">
    <rosparam>
      parent_frame_id: map
      child_frame_id: head_mount_kinect_rgb_optical_frame
      duration: 1
      rate: 30
    </rosparam>
  </node>

  <node name="tf_to_transform_base_to_camera"
        pkg="jsk_topic_tools" type="tf_to_transform.py"
        output="screen"
        respawn="true">
    <rosparam>
      parent_frame_id: base_link
      child_frame_id: head_mount_kinect_rgb_optical_frame
      duration: 1
      rate: 30
    </rosparam>
  </node>

  <node name="save_image_by_btn"
        pkg="mirror_recognition" type="save_image_by_btn.py"
        output="screen"/>

  <node name="rqt_yn_btn"
        pkg="jsk_rqt_plugins" type="rqt_yn_btn"/>

  <!-- ******************************************************************** -->
  <!-- Visualization                                                        -->
  <!-- ******************************************************************** -->

  <group ns="kinect_head/depth_registered/hw_registered">
    <node name="image_rect_viz"
          pkg="image_view" type="image_view">
      <remap from="image" to="image_rect"/>
      <rosparam subst_value="true">
        gui: false
        min_image_value: $(arg min_image_value)
        max_image_value: $(arg max_image_value)
        colormap: 2
      </rosparam>
    </node>
  </group>

  <node name="rviz"
        pkg="rviz" type="rviz"
        args="-d $(find mirror_recognition)/rvizconfig/pr2_kinect.rviz"/>

  <node name="rosconsole_overlay_text"
        pkg="jsk_rviz_plugins" type="rosconsole_overlay_text.py"
        output="screen"
        respawn="true">
    <rosparam>
      nodes:
        - /save_image_by_btn
      reverse_lines: false
    </rosparam>
  </node>

</launch>
